server:
  port: ${PORT:9080}
  tomcat:
    remote-ip-header: x-forwarded-for
    protocol-header: x-forwarded-proto

spring:
  jackson:
    serialization:
      write_dates_as_timestamps: false


---
#spring:
#  profiles: event-store
#
#  cloud:
#    stream:
#      bindings:
#        input_notification_msg_channel:
#          binder: kafka-event-notification
#          destination: board-event-notifications
#          contentType: application/json
#          group: command-board-events-group
#          consumer:
#            use-native-decoding: true
#            header-mode: none
#            configuration.key.serializer: org.apache.kafka.common.serialization.StringSerializer
#            configuration.value.serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      binders:
#        kafka-event-notification:
#          type: kafka
#          environment:
#            spring:
#              cloud:
#                stream:
#                  kafka:
#                    streams:
#                      binder:
#                        brokers: localhost
#      default-binder: kafka-event-notification

---
#spring:
#  profiles: kafka
#  cloud:
#    stream:
#      bindings:
#        output:
#          binder: board-events-out
#          destination: board-events
#          contentType: application/json
#          producer:
#            use-native-decoding: true
#            header-mode: none
#        boardEventsInput:
#          binder: board-events-in
#          destination: board-events
#          contentType: application/json
#          group: command-board-events-group
#          consumer:
#            use-native-decoding: true
#            header-mode: none
#      binders:
#        board-events-out:
#          type: kafka
#          environment:
#            spring:
#              cloud:
#                stream:
#                  kafka:
#                    streams:
#                      binder:
#                        brokers: localhost
#        board-events-in:
#          type: kstream
#          environment:
#            spring:
#              cloud:
#                stream:
#                  kafka:
#                    streams:
#                      binder:
#                        brokers: localhost
#      kafka:
#        streams:
#          binder:
#            configuration:
#              default:
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#          bindings:
#            output:
#              producer:
#                value-serde: org.springframework.kafka.support.serializer.JsonSerializer
#                key-serde: org.apache.kafka.common.serialization.StringSerializer
#            boardEventsInput:
#              consumer:
#                value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#        stream:
#          bindings:
#            output:
#              producer:
#                value:
#                  serde: org.springframework.kafka.support.serializer.JsonSerializer
#                key:
#                  serde: org.apache.kafka.common.serialization.StringSerializer
#            boardEventsInput:
#              consumer:
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde

grpc:
  enabled: true
  shutdownGrace: 1
  port: 6565

logger.level:
  org.apache.kafka: TRACE
  com.example.eventstorecommand: DEBUG
  org.springframework.cloud.stream: TRACE

logging:
  level:
    root: info